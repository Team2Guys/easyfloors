// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id                    Int            @id @default(autoincrement())
  name                  String         @unique
  price                 Int
  description           String
  stock                 Int
  discountPrice         Int?
  posterImageUrl        Json
  hoverImageUrl         Json?
  productImages         Json[]
  colors                Json[]         @default([])
  createdAt             DateTime?      @default(now())
  updatedAt             DateTime?      @default(now())
  Canonical_Tag         String?
  Meta_Description      String?
  Meta_Title            String?
  last_editedBy         String?
  custom_url            String
  waterproof            Boolean        @default(false)
  AdditionalInformation Json[]         @default([])
  plankWidth            String?
  ResidentialWarranty   String?
  CommmericallWarranty  String?
  categoryId            Int?
  short_description     String?
  category              Category?      @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  subCategoryId         Int?
  subcategory           subCategories? @relation(fields: [subCategoryId], references: [id], onDelete: SetNull)
}

model Category {
  id                Int        @id @default(autoincrement())
  name              String     @unique
  description       String?
  products          Products[]
  createdAt         DateTime?  @default(now())
  updatedAt         DateTime?  @updatedAt
  posterImageUrl    Json
  last_editedBy     String?
  short_description String?
  Canonical_Tag     String?
  Meta_Description  String?
  Meta_Title        String?
  custom_url        String
  subcategories     subCategories[] @relation()
  Recall_Cat      String?
}

model subCategories {
  id                Int        @id @default(autoincrement())
  name              String     @unique
  description       String?
  products          Products[]
  createdAt         DateTime?  @default(now())
  updatedAt         DateTime?  @updatedAt
  posterImageUrl    Json
  last_editedBy     String?
  short_description String?
  Canonical_Tag     String?
  Meta_Description  String?
  Meta_Title        String?
  categoryId        Int?
  category          Category?  @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  custom_url        String
  Recall_subCat      String?
}
